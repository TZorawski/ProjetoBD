package ui;

import dao.EquipeDAO;
import dao.PaisDAO;
import dao.PilotoDAO;
import java.awt.Frame;
import java.io.IOException;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import model.Equipe;
import model.Pais;
import model.Piloto;

/**
 *
 * @author André Schwerz
 */
public class PessoaJDialog extends javax.swing.JDialog {

    public PessoaJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        try {
            loadRecords();
            fillCBPais();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        JTablePilotos = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtCPF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtRegistro = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbCurso = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        taObservacao = new javax.swing.JTextArea();
        btnFechar = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pessoa");
        setBounds(new java.awt.Rectangle(0, 15, 0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JTablePilotos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        JTablePilotos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "CPF", "Nome", "Email", "Registro", "Curso", "Descrição"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(JTablePilotos);
        if (JTablePilotos.getColumnModel().getColumnCount() > 0) {
            JTablePilotos.getColumnModel().getColumn(0).setResizable(false);
            JTablePilotos.getColumnModel().getColumn(1).setResizable(false);
            JTablePilotos.getColumnModel().getColumn(2).setResizable(false);
            JTablePilotos.getColumnModel().getColumn(3).setResizable(false);
            JTablePilotos.getColumnModel().getColumn(4).setResizable(false);
            JTablePilotos.getColumnModel().getColumn(5).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 490, 170));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), " REGISTRO DE PILOTO ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 13))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCPF.setToolTipText("");
        txtCPF.setEnabled(false);
        txtCPF.setName("txtCPF"); // NOI18N
        jPanel1.add(txtCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 100, -1));

        jLabel1.setText("Email:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 70, 20));

        jLabel2.setText("Nome:");
        jLabel2.setAlignmentX(1.0F);
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 20, 70, 20));

        txtEmail.setEnabled(false);
        txtEmail.setName("txtEmail"); // NOI18N
        jPanel1.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 240, -1));

        jLabel3.setText("Observação:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 80, 20));

        jLabel4.setText("CPF:");
        jLabel4.setAlignmentX(1.0F);
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 20, 70, 20));

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });
        jPanel1.add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 330, -1));

        jLabel5.setText("Registro:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, -1, -1));

        txtRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegistroActionPerformed(evt);
            }
        });
        jPanel1.add(txtRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 190, -1));

        jLabel6.setText("Curso:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        cbCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCursoActionPerformed(evt);
            }
        });
        jPanel1.add(cbCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));

        taObservacao.setColumns(20);
        taObservacao.setRows(5);
        jScrollPane2.setViewportView(taObservacao);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 440, 70));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 490, 250));
        jPanel1.getAccessibleContext().setAccessibleName(" REGISTRO DE PESSOAS");

        btnFechar.setText("Cancelar");
        btnFechar.setActionCommand("btnFechar");
        btnFechar.setPreferredSize(new java.awt.Dimension(90, 29));
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });
        getContentPane().add(btnFechar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 460, 90, 30));

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setActionCommand("btnNovo");
        btnPesquisar.setPreferredSize(new java.awt.Dimension(90, 29));
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(btnPesquisar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 80, 30));

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.setActionCommand("btnAlterar");
        btnCadastrar.setEnabled(false);
        btnCadastrar.setPreferredSize(new java.awt.Dimension(90, 29));
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCadastrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 460, 80, 30));

        btnEditar.setText("Editar");
        btnEditar.setActionCommand("btnRemover");
        btnEditar.setEnabled(false);
        btnEditar.setPreferredSize(new java.awt.Dimension(90, 29));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 460, 80, 30));

        btnCancelar.setText("Remover");
        btnCancelar.setActionCommand("btnImprimir");
        btnCancelar.setEnabled(false);
        btnCancelar.setPreferredSize(new java.awt.Dimension(90, 29));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 460, 80, 30));

        jButton1.setText("Salvar");
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 460, 80, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        addRecord = true;
        clearInputBoxes();
       
        enableButtons(false, true, true, false);
        enableFields(true); 
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null, "Você tem certeza que deseja salvar esse registro?", "Confirmação?", JOptionPane.YES_NO_OPTION);

        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                if (addRecord == true) {
                    addNew();
                } else {
                    updateRecord();
                }
                addRecord = false;
                loadRecords();
                
                enableButtons(true, false, false, false);
                enableFields(false);
            } catch (IOException | ClassNotFoundException | SQLException ex) {
                System.out.println(ex.getMessage());
            }
        } 
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog(null, "Você tem certeza que deseja excluir esse registro?", "Confirmação?", JOptionPane.YES_NO_OPTION);

        if (dialogResult == JOptionPane.YES_OPTION) {
            try {
                deleteRecord();
                loadRecords();
                clearInputBoxes();
                enableButtons(true, false, false, false);
                enableFields(false);
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        clearInputBoxes();
        enableButtons(true, false, false, false);
        enableFields(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void txtRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRegistroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRegistroActionPerformed

    private void cbCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCursoActionPerformed
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTablePilotos;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JComboBox<String> cbCurso;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea taObservacao;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtRegistro;
    // End of variables declaration//GEN-END:variables
    
    boolean addRecord = false;

    private void clearInputBoxes() {
        txtCPF.setText("");
        txtEmail.setText("");
        txtEquipeID.setText("");
        txtEquipeNome.setText("");
    }
    
    private void addNew() throws SQLException, ClassNotFoundException, IOException {
        PaisDAO pDao = new PaisDAO();
        EquipeDAO eDao = new EquipeDAO();   
        Piloto p = new Piloto();
        p.setNome(txtEmail.getText());
        p.setEquipeAtual(eDao.find(Integer.parseInt(txtEquipeID.getText())));    
        p.setPais(pDao.find((String) CBPais.getSelectedItem()));
        p.setStatus(CBStatus.isSelected());
        PilotoDAO dao = new PilotoDAO();
        dao.insert(p);
    }
    
    private void updateRecord() throws SQLException, ClassNotFoundException, IOException {
        PaisDAO pDao = new PaisDAO();
        EquipeDAO eDao = new EquipeDAO();
        Piloto p = new Piloto();
        p.setId(Integer.parseInt(txtCPF.getText()));
        p.setNome(txtEmail.getText());
        p.setEquipeAtual(eDao.find(Integer.parseInt(txtEquipeID.getText())));    
        p.setPais(pDao.find((String) CBPais.getSelectedItem()));
        p.setStatus(CBStatus.isSelected());
        PilotoDAO dao = new PilotoDAO();
        dao.update(p);
    }

    private void deleteRecord() throws SQLException {
        PilotoDAO dao = new PilotoDAO();
        dao.remove(Integer.parseInt(txtCPF.getText()));
    }
    
    private void loadRecords() throws SQLException {
        String sql = "SELECT P.id as ID, P.nome as Nome, equipe_id, E.nome, P.pais_sigla as 'Sigla do Pais', P.status as Status  FROM PILOTO as P, EQUIPE as E WHERE E.id = P.equipe_id;";
        ResultSetTableModel tableModel = new ResultSetTableModel(sql);
        JTablePilotos.setModel(tableModel);
        
          //Hiding column "id" and equipe_id 
        JTablePilotos.removeColumn(JTablePilotos.getColumnModel().getColumn(0));
        JTablePilotos.removeColumn(JTablePilotos.getColumnModel().getColumn(1));
        
         //Adjusting columns 
        JTablePilotos.getColumnModel().getColumn(0).setMinWidth(120);//"nome
        JTablePilotos.getColumnModel().getColumn(1).setMinWidth(200);//"nome da equipe
        JTablePilotos.getColumnModel().getColumn(2).setMaxWidth(50); //"sigla"
        JTablePilotos.getColumnModel().getColumn(3).setMaxWidth(40); //"status"
       
        JTablePilotos.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                try {
                    if (JTablePilotos.getSelectedRow() >= 0) {
                        Object id = JTablePilotos.getModel().getValueAt(JTablePilotos.getSelectedRow(), 0);
                        Object nome = JTablePilotos.getModel().getValueAt(JTablePilotos.getSelectedRow(), 1);
                        Object equipe_id = JTablePilotos.getModel().getValueAt(JTablePilotos.getSelectedRow(), 2);
                        Object pais_sigla = JTablePilotos.getModel().getValueAt(JTablePilotos.getSelectedRow(), 4);
                        Object status = JTablePilotos.getModel().getValueAt(JTablePilotos.getSelectedRow(), 5).toString();
                        
                        txtCPF.setText(id.toString());
                        txtEmail.setText(nome.toString());
                        txtEquipeID.setText(equipe_id.toString());
                        
                        EquipeDAO eDao = new EquipeDAO();
                        Equipe e = eDao.find(Integer.parseInt(equipe_id.toString()));
                        txtEquipeNome.setText(e.getNome());             
                        CBPais.setSelectedItem(pais_sigla.toString());
                        CBStatus.setSelected(status.equals("true"));
                        
                        enableButtons(false, true, true, true);
                        enableFields(true);
                    }
                } catch (IOException | ClassNotFoundException | NumberFormatException | SQLException ex) {
                    System.out.println(ex.getMessage());
                }
            }
        });

        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(SwingConstants.LEFT);
        JTablePilotos.getColumnModel().getColumn(0).setCellRenderer(rightRenderer);
    }  

    private void fillCBPais() throws SQLException {
        PaisDAO dao = new PaisDAO();
        List<Pais> paises = dao.list();
        CBPais.removeAllItems();
        for(Pais p : paises){
            CBPais.addItem(p.getSigla());
        }        
    }
    
    public void enableButtons(boolean novo, boolean salvar, boolean cancelar, boolean remover){
        btnPesquisar.setEnabled(novo);
        btnCadastrar.setEnabled(salvar);
        btnCancelar.setEnabled(cancelar);
        btnEditar.setEnabled(remover);
    }

    private void enableFields(boolean flag) {
        CBStatus.setEnabled(flag);
        CBPais.setEnabled(flag);
        txtEmail.setEnabled(flag);
        btnBuscaEquipe.setEnabled(flag);
    }
}